데이터 시각화
시각화 라이브러리 : matplotlib, seaborn, folium(지도시각화)
matplotlib : 파이썬에서 가장 많이 사용하는 시각화 라이브러리, 판다스 내부에 포함
seaborn : matplotlib기반으로 색, 테마, 차트 기능. groupby 기능을 추가한 라이브러리

matplotlib
https://pypi.org/project/matplotlib/
https://matplotlib.org/stable/api/pyplot_summary.html


패키지 import 및 기본 설정
import matplotlib.pyplot as plt
%config InlineBackend.figure_format = 'retina'
# 한글설정(windows mac)
plt.rc('font', family='Malgun Gothic') # 윈도우즈
# plt.rc('font', family='AppleGothic') # mac
plt.rc('axes', unicode_minus=False) # 축의 - 깨짐 방지
# warning 안보이게
import warnings
warnings.filterwarnings(action='ignore')

그래프 그리기
matplotlib으로 그래프 그리기 위한 단계
1.데이터 준비
2.그래프 생성
3.그래프 함수로 그리기
4.그래프 커스터마이징
5.그래프 출력 및 저장
ex)
x = [1, 2, 3] # 1)
y = [-2, 4, 6]
plt.figure(figsize=(7, 2)) # 2) 그래프 객체 생성 사이즈는 인치
plt.plot(x,y) # 3)
plt.ylabel('some number') # 4) 커스터마이징
# plt.show() # 5)출력
plt.savefig('data/ch12.png', bbox_inches='tight') # 파일출력

그래프 영역 나누기
1) subplot()함수로 서브플롯 추가
ex)
plt.figure(figsize=(5,5))
plt.subplot(2,1,1) # 2행 1열로 subplot에서 1번째 subplot은 다음과 같이 그린다
plt.plot(x, np.sin(x))
plt.subplot(224) # 2행 2열 subplot 중 4번째 subplot (, 없어도 가능)
plt.scatter(x, np.sin(x)*np.cos(x))

2) subplots()함수로 서브플롯 추가
plot함수에 색상이나 스타일 조정
ex)
2행 2열짜리 서브플롯
fig, axes = plt.subplots(nrows=2, ncols=2, figsize=(7,4))
axes[0,0].plot(x, np.sin(x), " " ) 
# " " 자리에 ex) c='r', linewidth=10
                      'c--' # c='c', linestyle='--'
                      '#00AA00'
                      'ko:' # k:black, marker='o', linestyle=':' 등등
for를 이용한 서브플롯
func = [np.sin, np.cos, np.tanh, lambda x:np.sin(x)*np.cos(x)]
fmt = ['r','c--', '#00AA00', 'r-.']
fig, axes = plt.subplots(2, 2, figsize=(7,4))
list(enumerate(axes.flat))
for i, ax in enumerate(axes.flat):
    ax.plot(x, func[i](x), fmt[i])


다양한 그래프 그리기
1) pyplot 함수들(교안 16page)
https://matplotlib.org/api/_as_gen/matplotlib.pyplot.html
2) matplotlib.pyplot.plot() : 선그래프
3) pandas.DataFrame.plot()
plt.____(x, y, fmt)
df.plot(x=None, y=None, kind='line', figsize=None, title=None, grid=None)
kind : line(기본값), scatter(점도표), bar, barh, density, hist, pie(한컬럼만)....
4) plt.scatter() : 산점도


그 외 그래프 그리기
1) boxplot vs. violinplt
1. 박스플롯 (Box Plot)
 데이터의 통계량을 중심
   * 상자(Box): 중앙값(Median, 50% 지점), 1사분위수(Q_1, 25% 지점), 3사분위수(Q_3, 75% 지점), 상자의 길이는 사분위 범위(Interquartile Range, IQR)
   * 수염(Whisker): 일반적으로 Q_1 - 1.5 \times IQR부터 Q_3 + 1.5 \times IQR까지의 범위
   * 이상치(Outliers): 수염 밖에 있는 개별 데이터 포인트
2. 바이올린플롯 (Violin Plot)
 박스플롯의 정보에 더해 데이터의 전체 분포 형태를 커널 밀도 추정
   * 바이올린 모양: 커널 밀도 추정 그래프를 대칭으로 양쪽에 그린 형태
                          바이올린의 폭은 해당 값 근처에 데이터가 얼마나 밀집해 있는지(데이터의 밀도)를 나타냄
                          폭이 넓을수록 데이터가 많음

2) bar(), barh()


3) hist(도수분포표, 히스토그램)
1차원

도수분포표
데이터를 일정 범위의 계급으로 나누고, 각 계급에 속하는 데이터의 개수(도수)를 나타낸 표
데이터를 숫자로 정리한 것이므로 보기 어려움
데이터의 전체적인 분포를 표 형태로 요약
히스토그램
도수분포표의 데이터를 직사각형 막대그래프 형태로 시각화
자료의 중심 위치, 산포도, 대칭성 등을 한눈에 파악

데이터의 분포, 패턴, 이상치 등을 직관적으로 파악하는 데 사용


4) axvline(), axhline(), fill(), fill_between()
axvline
그래프의 특정x좌표에 세로선을 추가하여 데이터의특정 시점이나 기준값 등을 표시
axhline
그래프의 특정y좌표에 가로선을 추가하여 평균, 임계값, 목표 등의 y값을 나타내는 기준선을 표시
fill
주어진 데이터 포인트로 정의된 다각형 영역을 채움
임의의 영역을 색상으로 채우는 데 사용하고 복잡한 영역을 표시하는데 사용
fill_between
두개늬 수평곡선이나 배열의 사이 영역을 채움
주로 신뢰구간, 오찹범위, 두 데이터간의 차이 등을 시각화

5) pie
1차원
원그래를 의미
전체 데이터의 각 범주가 차지하는 비울을 시각화



그래프 커스터마이징
1) linestyle, linewidth, color, marker
2) text(), annotate()
text
plt.taext(x,y,'텍스트내용')
데이터 내부의 임의의 위치에 글을 넣는데 유용
annotate
그래프의 특정지점에 화살표가 포함된 주석을 추가하여 특정부분을 강조
주석표시  위치 (xy)와 텍스트가 시작될 위치 (xytext)를 지정

3) 수학기호
4) 축과 눈금
서브플롯끼리 여백 조정(title, x축 label)
plt.subplots_adjust(hspace= , wspace= ) # hspace(위아래여백, 1은 서브플롯높이)
                                            # wspace(좌우여백, 1은 서브플롯너비

ylabel='y값', xlabel='x값',
xlim = [from,to] # x축 눈금 범위
xticks = [, , , , ] # x축 눈금
xticklabels = [' ',' ', ' ', ' ', ' '] # x축 눈금 라벨
  
5) 축공유 
ex)
ax2 = ax1.twinx()


6) 범례표시

7) 플롯스타일 지정
plt.style.use("ggplot") # default, ggplot, classic, ....
















